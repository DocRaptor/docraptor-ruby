=begin
#DocRaptor

#A native client library for the DocRaptor HTML to PDF/XLS service.

The version of the OpenAPI document: 2.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for DocRaptor::DocApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DocApi' do
  before do
    # run before each test
    @api_instance = DocRaptor::DocApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DocApi' do
    it 'should create an instance of DocApi' do
      expect(@api_instance).to be_instance_of(DocRaptor::DocApi)
    end
  end

  # unit tests for create_async_doc
  # Creates a document asynchronously. You must use a callback url or the returned status id and the status API to find out when it completes. Then use the download API to get the document. 
  # @param doc 
  # @param [Hash] opts the optional parameters
  # @return [AsyncDoc]
  describe 'create_async_doc test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_doc
  # Creates a document synchronously. 
  # @param doc 
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'create_doc test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_hosted_async_doc
  # Creates a hosted document asynchronously. You must use a callback url or the returned status id and the status API to find out when it completes. Then use the download API to get the document. 
  # @param doc 
  # @param [Hash] opts the optional parameters
  # @return [AsyncDoc]
  describe 'create_hosted_async_doc test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_hosted_doc
  # Creates a hosted document synchronously. 
  # @param doc The document to be created.
  # @param [Hash] opts the optional parameters
  # @return [DocStatus]
  describe 'create_hosted_doc test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for expire
  # Expires a previously created hosted doc. 
  # @param id The download_id returned from status request or hosted document response.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'expire test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_async_doc
  # Downloads a finished document. 
  # @param id The download_id returned from an async status request or callback.
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'get_async_doc test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_async_doc_status
  # Check on the status of an asynchronously created document. 
  # @param id The status_id returned when creating an asynchronous document.
  # @param [Hash] opts the optional parameters
  # @return [DocStatus]
  describe 'get_async_doc_status test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
