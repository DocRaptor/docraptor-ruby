#!/bin/bash
set -e
cd "$(dirname "$0")/../.."

# check dependencies
ruby -v > /dev/null    || (echo "ruby must be installed"; exit 1)

major_minor_version="$(ruby -e 'puts RUBY_VERSION.split(".")[0, 2].join(".")')"
gemfile_lock="gemfiles/Gemfile.${major_minor_version}.lock"
if [ -f "$gemfile_lock" ]; then
  cp -v "$gemfile_lock" Gemfile.lock
else
  rm -vf Gemfile.lock
fi

bundle -v > /dev/null  || (echo "bundler must be installed"; exit 1)

# TODO: update to test against updates dependencies as well
bundle install

if [ ! -f "$gemfile_lock" ]; then
  cp -v Gemfile.lock "$gemfile_lock"
fi

cd test


green() {
  tput bold    # bold text
  tput setaf 2 # green text
  echo -n "$@"
  tput sgr0    # reset to default text
}
red() {
  tput bold    # bold text
  tput setaf 1 # red text
  echo -n "$@"
  tput sgr0    # reset to default text
}


key_relative_path="tmp/.docraptor_key"
key_path="../$key_relative_path"

# runs a test file with PASS/FAIL message
run_test() {
  test_success="true"
  test_name="$1 ${2:-(without $key_relative_path)}"
  if [[ "$DOCRAPTOR_KEY" == "" ]] && [ -f "$key_path" ]; then
    (
      export DOCRAPTOR_KEY="$(cat "$key_path")"
      run_test $1 "(with $key_relative_path)"
    ) || test_success="false"
  fi

  if ruby $1; then
    echo "$(green PASS) $test_name"
  else
    test_success="false"
    echo "$(red FAIL) $test_name"
  fi

  if [ $test_success == "true" ]; then
    return 0
  else
    return 1
  fi
}

success="true"

if [ "$1" == "" ]; then
  for test in $(ls *.rb); do
    run_test $test || success="false"
  done
else
  run_test $1.rb || success="false"
fi

if [ $success == "true" ]; then
  exit 0
else
  exit 1
fi
